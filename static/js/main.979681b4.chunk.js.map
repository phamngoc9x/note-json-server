{"version":3,"sources":["constants/Config.js","utils/apiCaller.js","actions/index.js","constants/ActionTypes.js","components/Nav.js","components/NoteItem.js","components/NoteList.js","components/NoteForm.js","components/App.js","serviceWorker.js","reducers/changeEditStatus.js","reducers/changeAddStatus.js","reducers/getDataEdit.js","reducers/updateList.js","reducers/index.js","components/store.js","index.js"],"names":["API_URL","callApi","enpoint","method","arguments","length","undefined","body","axios","url","concat","Config","data","catch","error","console","log","changeEditStatus","editStatus","type","addStatus","isAdd","updateList","fetchData","dispatch","then","res","Nav","handleAdd","event","preventDefault","_this","props","changeAddStatus","_this2","this","react_default","a","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","Component","connect","state","ownProps","NoteItem","require","getDataEdit","value","editForm","getEditItem","getDelete","deleteNote","role","data-parent","title","aria-labelledby","content","dataEdit","deleteNoteRequest","editObject","NoteList","getData","dataTest","map","key","components_NoteItem","aria-multiselectable","NoteForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","name","target","setState","defineProperty","addData","editOject","addEditData","item","addDataRequest","printTitle","editData","htmlFor","onChange","aria-describedby","placeholder","addDataStore","newItem","updateData","App","showForm","components_NoteForm","components_Nav","NoteList_NoteList","Boolean","window","location","hostname","match","allReducer","noteInitialState","action","combineReducers","store","createStore","applyMiddleware","thunk","subscribe","getState","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6QAAaA,EAAU,yCCER,SAASC,EAAQC,GAA6B,IAApBC,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,MAAOG,EAAKH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAQE,IAAM,CACZL,OAAQA,EACRM,IAAG,GAAAC,OAAKC,EAAL,KAAAD,OAAuBR,GAC1BU,KAAML,IACLM,MAAM,SAAUC,GACjBC,QAAQC,IAAIF,KCLT,IAWMG,EAAmB,SAACC,GAC/B,MAAO,CACLC,KCd8B,qBDe9BD,YAAcA,IAGLE,EAAY,SAACC,GACxB,MAAO,CACLF,KCnB6B,oBDoB7BE,OAASA,IASAC,EAAa,SAACV,GACzB,MAAO,CACLO,KC7BuB,cD8BvBP,SAUSW,EAAY,WACvB,OAAO,SAACC,GACN,OAAOvB,EAAQ,QAAS,MAAO,MAAMwB,KAAK,SAAAC,GACxCF,EAASF,EAAWI,EAAId,WE5CxBe,6MACJC,UAAY,SAACC,GACXA,EAAMC,iBAENC,EAAKC,MAAMC,2FAGJ,IAAAC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAjC,YACAJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2BAA2BpB,KAAK,SAASsB,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,sBACpLT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CAA+CO,GAAG,oBAC/DV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWC,KAAK,KAA7B,QAAsCJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,eAExCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWQ,QAAW,SAAClB,GAAD,OAAWK,EAAKN,UAAUC,IAASW,KAAK,KAA3E,iCAlBIQ,aAyCHC,cAfS,SAACC,EAAOC,GAC9B,MAAO,IAIkB,SAAC3B,EAAU2B,GACpC,MAAO,CACLlC,iBAAkB,WAChBO,EAASP,MAEXgB,gBAAiB,WACfT,EAASJ,QAIA6B,CAA6CtB,GCxCtDyB,GAFQC,EAAQ,+MAIpBC,YAAc,SAACC,GACbxB,EAAKC,MAAMwB,WACXzB,EAAKC,MAAMyB,YAAYF,MAGzBG,UAAY,SAACZ,GACXf,EAAKC,MAAM2B,WAAWb,4EAEf,IAAAZ,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcqB,KAAK,MAAMd,GAAG,SACzCV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACZH,EAAAC,EAAAC,cAAA,KAAGG,cAAY,WAAWoB,cAAY,YAAYrB,KAAM,UAAYL,KAAKH,MAAMc,GAAIF,gBAAc,OAAOD,gBAAeR,KAAKH,MAAMc,IAC/HX,KAAKH,MAAM8B,OAEd1B,EAAAC,EAAAC,cAAA,OAAKC,UAAW,yBACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBQ,QAAS,kBAAKb,EAAKoB,YAAYpB,EAAKF,MAAMuB,SAAnF,YACAnB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBQ,QAAS,kBAAKb,EAAKwB,UAAUxB,EAAKF,MAAMc,MAAnF,YAGNV,EAAAC,EAAAC,cAAA,OAAKQ,GAAI,SAAWX,KAAKH,MAAMc,GAAKP,UAAU,cAAcqB,KAAK,WAAWG,kBAAgB,SAC1F3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZJ,KAAKH,MAAMgC,mBAzBDhB,cAsDRC,cArBS,SAACC,EAAOC,GAC9B,MAAO,CACNc,SAAUf,EAAMe,WAGQ,SAACzC,EAAU2B,GACpC,MAAO,CACLQ,WAAY,SAACb,GACXtB,EHM2B,SAACsB,GAChC,OAAO,SAACtB,GACN,OAAOvB,EAAO,SAAAS,OAAUoC,GAAM,SAAU,MAAMrB,KAAK,SAAAC,GACjDF,EA/CoB,SAACsB,GACzB,MAAO,CACL3B,KCTuB,cDUvB2B,MA4CWa,CAAWb,IACpBtB,EAASD,QGVA2C,CAAkBpB,KAE7BU,SAAU,WACRhC,EAASP,MAEXwC,YAAa,SAACU,GACZ3C,EH1BqB,SAAC2C,GAC1B,MAAO,CACLhD,KCxByB,gBDyBzBgD,cGuBWb,CAAYa,KAEvB5C,UAAW,WACTC,EAASD,QAIA0B,CAA6CG,GCxDvCgB,6MAEnBC,QAAU,WACR,GAAGtC,EAAKC,OAASD,EAAKC,MAAMsC,SAC1B,OAAOvC,EAAKC,MAAMsC,SAASC,IAAI,SAAChB,EAAOiB,GACrC,OAAOpC,EAAAC,EAAAC,cAACmC,EAAD,CAAUlB,MAASA,EAAOiB,IAAOA,EAAK1B,GAAKS,EAAMT,GAAIgB,MAAQP,EAAMO,MAAOE,QAAWT,EAAMS,qFAMtG,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,WAAWc,KAAK,UAAUc,uBAAqB,QAEnDvC,KAAKkC,mBAfqBrB,qBCEhC2B,cACJ,SAAAA,EAAY3C,GAAO,IAAAD,EAAA,OAAA6C,OAAAC,EAAA,EAAAD,CAAAzC,KAAAwC,IACjB5C,EAAA6C,OAAAE,EAAA,EAAAF,CAAAzC,KAAAyC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA7C,KAAMH,KAiBRiD,aAAe,SAACpD,GACd,IAAMqD,EAAOrD,EAAMsD,OAAOD,KACpB3B,EAAQ1B,EAAMsD,OAAO5B,MAC3BxB,EAAKqD,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGM,EAAO3B,KAtBOxB,EA0BnBuD,QAAU,SAACxB,EAAOE,GAChB,GAAGjC,EAAKmB,MAAMJ,GAAI,CAChB,IAAIyC,EAAY,GAChBA,EAAUzC,GAAKf,EAAKmB,MAAMJ,GAC1ByC,EAAUzB,MAAQ/B,EAAKmB,MAAMY,MAC7ByB,EAAUvB,QAAUjC,EAAKmB,MAAMc,QAC/BjC,EAAKC,MAAMwB,WACXzB,EAAKC,MAAMwD,YAAYzD,EAAKmB,MAAMJ,GAAGyC,OAMlC,CACH,IAAIE,EAAO,GACXA,EAAK3B,MAAQA,EACb2B,EAAKzB,QAAUA,EACfjC,EAAKC,MAAMC,kBACXF,EAAKC,MAAM0D,eAAeD,KA5CX1D,EAyDnB4D,WAAa,WACX,OAAG5D,EAAKC,MAAMX,MACLe,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,+BAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,wBA5DTR,EAAKmB,MAAQ,CACXY,MAAO,GACPE,QAAQ,GACRlB,GAAI,IALWf,oFAUbI,KAAKH,MAAMX,OACbc,KAAKiD,SAAS,CACZtB,MAAO3B,KAAKH,MAAM4D,SAAS9B,MAC3BE,QAAS7B,KAAKH,MAAM4D,SAAS5B,QAC7BlB,GAAKX,KAAKH,MAAM4D,SAAS9C,sCAmDtB,IAAAZ,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZJ,KAAKwD,aACNvD,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOuD,QAAQ,SAAf,6BACAzD,EAAAC,EAAAC,cAAA,SAAOnB,KAAK,OAAO2E,SAAY,SAACjE,GAAD,OAAWK,EAAK+C,aAAapD,IAAQ0B,MAAOpB,KAAKe,MAAMY,MAAOvB,UAAU,eAAe2C,KAAK,QAAQpC,GAAG,QAAQiD,mBAAiB,YAAYC,YAAY,8BACvL5D,EAAAC,EAAAC,cAAA,SAAOQ,GAAG,YAAYP,UAAU,wBAAhC,2DAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOuD,QAAQ,SAAf,sBACAzD,EAAAC,EAAAC,cAAA,YAAUnB,KAAK,OAAQ2E,SAAY,SAACjE,GAAD,OAAWK,EAAK+C,aAAapD,IAAQ0B,MAASpB,KAAKe,MAAMc,QAASzB,UAAU,eAAe2C,KAAK,UAAUpC,GAAG,UAAUiD,mBAAiB,YAAYC,YAAY,uBACnM5D,EAAAC,EAAAC,cAAA,SAAOQ,GAAG,YAAYP,UAAU,wBAAhC,oDAEFH,EAAAC,EAAAC,cAAA,UAAQnB,KAAK,QAAQoB,UAAU,4BAA4BQ,QAAW,kBAAMb,EAAKoD,QAASpD,EAAKgB,MAAMY,MAAO5B,EAAKgB,MAAMc,WAAvH,qBAjFehB,aAoHRC,cA5BS,SAACC,EAAOC,GAC9B,MAAO,CACLyC,SAAW1C,EAAM0C,SACjBvE,MAAO6B,EAAM7B,QAGU,SAACG,EAAU2B,GACpC,MAAO,CACL8C,aAAc,SAACC,GACb1E,ELlGG,CACLL,KCLoB,cIwGpBqC,SAAU,WACRhC,EAASP,MAEXgB,gBAAiB,WACfT,EAASJ,MAEX+E,WAAY,SAACvF,GACXY,EAASF,EAAWV,KAEtB8E,eAAgB,SAACD,GACfjE,ELrDwB,SAACiE,GAC7B,OAAO,SAACjE,GACN,OAAOvB,EAAQ,QAAS,OAAQwF,GAAMhE,KAAK,SAAAC,GACzCF,EA5DG,CACLL,KCLoB,aDiElBK,EAASD,QKiDAmE,CAAeD,KAE1BD,YAAa,SAAC1C,EAAG2C,GACfjE,EL/EqB,SAACsB,EAAGyC,GAC7B,OAAO,SAAC/D,GACN,OAAOvB,EAAQ,QAAQ6C,EAAI,MAAOyC,GAAW9D,KAAK,SAAAC,GAChDF,EAASD,QK4EAiE,CAAY1C,EAAG2C,OAIfxC,CAA6C0B,GChHtDyB,6MACJC,SAAW,WACT,GAAGtE,EAAKC,MAAMd,YAAaa,EAAKC,MAAMX,MACpC,OAAOe,EAAAC,EAAAC,cAACgE,EAAD,0FAKTnE,KAAKH,MAAMT,6CAKX,OADAR,QAAQC,IAAImB,KAAKH,MAAMpB,MAErBwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACbH,EAAAC,EAAAC,cAACiE,EAAD,MACAnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACkE,EAAD,CAAUlC,SAAYnC,KAAKH,MAAMpB,OAChCuB,KAAKkE,qBAnBArD,aA6CHC,cAjBS,SAACC,EAAOC,GAE9B,MAAO,CACLjC,WAAYgC,EAAMhC,WAClBG,MAAO6B,EAAM7B,MACbT,KAAMsC,EAAMtC,OAGW,SAACY,EAAU2B,GACpC,MAAO,CACL5B,UAAW,WACTC,EAASD,QAMA0B,CAA6CmD,GC1CxCK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCjBN,IAUeC,EATI,WAAsC,IAArC5D,EAAqC9C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACvD,QADuDA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACxCa,MACb,IAAK,qBAEH,OAAQ+B,EACV,QACE,OAAOA,ICGE4D,EATI,WAAsC,IAArC5D,EAAqC9C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACvD,QADuDA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACxCa,MACb,IAAK,oBAEH,OADA+B,GAASA,EAEX,QACE,OAAOA,ICPP6D,EAAmB,GASVD,EARI,WAAsC,IAArC5D,EAAqC9C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7B2G,EAAkBC,EAAW5G,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAQ0G,EAAO7F,MACb,IAAK,gBACH,OAAO6F,EAAO7C,WAChB,QACE,OAAOjB,ICPP6D,EAAmB,GASVD,EARI,WAAsC,IAArC5D,EAAqC9C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7B2G,EAAkBC,EAAW5G,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAQ0G,EAAO7F,MACb,IAAK,cACH,OAAO6F,EAAOpG,KAChB,QACE,OAAOsC,WCME4D,EANIG,0BAAgB,CACjC5F,MAAOY,EACPf,WAAYD,EACZ2E,SAAUtC,EACV1C,KAAMU,YCLJ4F,EAFQ7D,EAAQ,GAEF8D,YAAYL,EAAWM,0BAAgBC,MACzDH,EAAMI,UAAU,WACdvG,QAAQC,IAAIkG,EAAMK,cAELL,QCDfM,IAASC,OACTrF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAUR,MAAOA,GACf9E,EAAAC,EAAAC,cAACqF,EAAD,OAEAC,SAASC,eAAe,SPqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvG,KAAK,SAAAwG,GACjCA,EAAaC","file":"static/js/main.979681b4.chunk.js","sourcesContent":["export const API_URL = 'http://localhost:3000';","import * as Config from './../constants/Config';\nimport axios from 'axios';\nexport default function callApi(enpoint, method ='GET', body){\n  return  axios({\n    method: method,\n    url: `${Config.API_URL}/${enpoint}`,\n    data: body\n  }).catch(function (error) {\n    console.log(error);\n  });\n}","import * as types from '../constants/ActionTypes';\nimport callApi from '../utils/apiCaller';\n\nexport const addData = () =>{\n  return {\n    type: types.ADD_DATA\n  }\n}\nexport const deleteNote = (id) =>{\n  return {\n    type: types.DELETE_NOTE,\n    id\n  }\n}\nexport const changeEditStatus = (editStatus) =>{\n  return {\n    type: types.CHANGE_EDIT_STATUS,\n    editStatus : !editStatus\n  }\n}\nexport const addStatus = (isAdd) =>{\n  return {\n    type: types.CHANGE_ADD_STATUS,\n    isAdd : !isAdd\n  }\n}\nexport const getDataEdit = (editObject) =>{\n  return {\n    type: types.GET_DATA_EDIT,\n    editObject \n  }\n}\nexport const updateList = (data) =>{\n  return {\n    type: types.UPDATE_LIST,\n    data \n  }\n}\nexport const addEditData = (id,editOject) =>{\n  return (dispatch) =>{\n    return callApi('notes'+id, 'PUT', editOject).then(res => {\n      dispatch(fetchData());\n    })\n  }\n}\nexport const fetchData = () =>{\n  return (dispatch) =>{\n    return callApi('notes', 'GET', null).then(res => {\n      dispatch(updateList(res.data))\n    })\n  }\n}\nexport const deleteNoteRequest = (id) =>{\n  return (dispatch) =>{\n    return callApi(`notes/${id}`, 'DELETE', null).then(res => {\n      dispatch(deleteNote(id));\n      dispatch(fetchData());\n    })\n  }\n}\n//add data API\nexport const addDataRequest = (item) =>{\n  return (dispatch) =>{\n    return callApi('notes', 'POST', item).then(res => {\n      dispatch(addData());\n      dispatch(fetchData());\n    })\n  }\n}","export const ADD_DATA = 'ADD_DATA';\nexport const DELETE_NOTE = 'DELETE_NOTE';\nexport const CHANGE_EDIT_STATUS = 'CHANGE_EDIT_STATUS';\nexport const CHANGE_ADD_STATUS = 'CHANGE_ADD_STATUS';\nexport const GET_DATA_EDIT = 'GET_DATA_EDIT';\nexport const UPDATE_LIST = 'UPDATE_LIST';\nexport const FETCH_DATA = 'FETCH_DATA';","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { changeEditStatus, addStatus } from '../actions/index';\n\nclass Nav extends Component {\n  handleAdd = (event) => {\n    event.preventDefault();\n    //this.props.changeEditStatus();\n    this.props.changeAddStatus();\n    \n  }\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary\">\n        <a className=\"navbar-brand\" href=\"/\">Note app</a>\n        <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" />\n        <div className=\"collapse navbar-collapse justify-content-end\" id=\"collapsibleNavId\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" onClick = {(event) => this.handleAdd(event) } href=\"/\">Thêm ghi chú</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    \n  }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    changeEditStatus: () => {\n      dispatch(changeEditStatus())\n    },\n    changeAddStatus: () => {\n      dispatch(addStatus())\n    },\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { changeEditStatus, getDataEdit, deleteNoteRequest, fetchData } from '../actions/index';\nconst axios = require('axios');\n\nclass NoteItem extends Component {\n  \n  getDataEdit = (value) => {\n    this.props.editForm();\n    this.props.getEditItem(value);\n    \n  }\n  getDelete = (id) => {\n    this.props.deleteNote(id);\n  }\n  render() {\n    return (\n      <div className=\"card mt-3\">\n        <div className=\"card-header\" role=\"tab\" id=\"note1\">\n          <h5 className=\"mb-0\">\n            <a data-toggle=\"collapse\" data-parent=\"#noteList\" href={'#noteid' + this.props.id} aria-expanded=\"true\" aria-controls={this.props.id}>\n              {this.props.title}\n            </a>\n            <div className =\"btn-group float-right\">\n              <button className=\"btn btn-outline-info\" onClick={() =>this.getDataEdit(this.props.value)}>Sửa</button>\n              <button className=\"btn btn-outline-danger\" onClick={() =>this.getDelete(this.props.id)}>Xoá</button>\n            </div>\n          </h5>\n        <div id={'noteid' + this.props.id}  className=\"collapse in\" role=\"tabpanel\" aria-labelledby=\"note1\">\n          <div className=\"card-body\">\n            {this.props.content}\n          </div>\n        </div>\n      </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n   dataEdit: state.dataEdit,\n  }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    deleteNote: (id) => {\n      dispatch(deleteNoteRequest(id))\n    },\n    editForm: () => {\n      dispatch(changeEditStatus())\n    },\n    getEditItem: (editObject) => {\n      dispatch(getDataEdit(editObject))\n    },\n    fetchData: () => {\n      dispatch(fetchData())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteItem);\n","import React, { Component } from 'react'\nimport NoteItem from './NoteItem';\n\nexport default class NoteList extends Component {\n\n  getData = () => {\n    if(this.props && this.props.dataTest) {\n      return this.props.dataTest.map((value, key) =>{\n        return <NoteItem value = {value} key = {key} id ={value.id} title= {value.title} content = {value.content}/>\n      })\n    }\n    \n  }  \n  render() {\n    return (\n      <div className=\"col\">\n        <div id=\"noteList\" role=\"tablist\" aria-multiselectable=\"true\">\n          {\n            this.getData()\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addData, changeEditStatus, addStatus, updateList,addDataRequest,addEditData } from '../actions/index';\n\n\nclass NoteForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      content:'',\n      id: ''\n    }\n  }\n  \n  componentWillMount() {\n    if(!this.props.isAdd) {\n      this.setState({\n        title: this.props.editData.title,\n        content: this.props.editData.content,\n        id : this.props.editData.id,\n      })\n    }\n  }\n  handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState( {\n      [name]: value\n    })\n  }\n\n  addData = (title, content) => {\n    if(this.state.id) {\n      var editOject = {};\n      editOject.id = this.state.id;\n      editOject.title = this.state.title;\n      editOject.content = this.state.content;\n      this.props.editForm();\n      this.props.addEditData(this.state.id,editOject);\n      // axios.put('http://localhost:3000/notes/' + this.state.id, editOject).then((res) => {\n      //   axios.get('http://localhost:3000/notes').then((res) =>  {\n      //     this.props.updateData(res.data);\n      //   })\n      // })\n    }else{\n      var item = {};\n      item.title = title;\n      item.content = content;\n      this.props.changeAddStatus();\n      this.props.addDataRequest(item);\n      // axios.post('http://localhost:3000/notes', item).then((res) =>{\n      //   console.log(res.data);\n      //   this.props.addDataStore(res.data);\n      //   axios.get('http://localhost:3000/notes').then((res) =>  {\n      //     this.props.updateData(res.data);\n      //   })\n      // })\n      \n    }\n    \n  }\n\n  printTitle = ()=>{\n    if(this.props.isAdd) {\n      return <h5 className=\"mt-3\">Thêm mới Ghi Chú</h5>\n    }\n    else {\n      return <h5 className=\"mt-3\">Sửa Ghi Chú</h5>\n    }\n  }\n  render() {\n    return (\n      <div className=\"col-4\">\n        {this.printTitle()}\n        <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Tiêu đề Note</label>\n          <input type=\"text\" onChange = {(event) => this.handleChange(event)} value={this.state.title} className=\"form-control\" name=\"title\" id=\"title\" aria-describedby=\"helptitle\" placeholder=\"Tiêu đề Note\" />\n          <small id=\"helptitle\" className=\"form-text text-muted\">Điền tiêu đề vào đây</small>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Nội dung Note</label>\n          <textarea type=\"text\"  onChange = {(event) => this.handleChange(event)} value = {this.state.content} className=\"form-control\" name=\"content\" id=\"content\" aria-describedby=\"helptitle\" placeholder=\"Nội dung Note\"  />\n          <small id=\"helptitle\" className=\"form-text text-muted\">Điền nội dung vào đây</small>\n        </div>\n        <button type=\"reset\" className=\"btn btn-primary btn-block\" onClick = {() => this.addData( this.state.title, this.state.content)}>Lưu</button>\n        </form>\n      </div>\n\n    )\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    editData : state.editData,\n    isAdd: state.isAdd,\n  }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    addDataStore: (newItem) => {\n      dispatch(addData(newItem));\n    },\n    editForm: () => {\n      dispatch(changeEditStatus())\n    },\n    changeAddStatus: () => {\n      dispatch(addStatus())\n    },\n    updateData: (data) => {\n      dispatch(updateList(data))\n    },\n    addDataRequest: (item) => {\n      dispatch(addDataRequest(item))\n    },\n    addEditData: (id,item) => {\n      dispatch(addEditData(id,item))\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteForm);\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Nav from './Nav';\nimport NoteList from './NoteList';\nimport NoteForm from './NoteForm';\nimport { connect } from 'react-redux';\nimport { updateList, fetchData } from '../actions/index';\n\n\nclass App extends Component {\n  showForm = () => {\n    if(this.props.editStatus ||this.props.isAdd) {\n      return <NoteForm/>\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  render() {\n    console.log(this.props.data);\n    return (\n      <div className=\"\">\n        <Nav></Nav>\n        <div className=\"container\">\n          <div className=\"row\">\n            <NoteList dataTest = {this.props.data}/>\n            {this.showForm()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n  //console.error(\"state\", state, ownProps)\n  return {\n    editStatus: state.editStatus,\n    isAdd: state.isAdd,\n    data: state.data\n  }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    fetchData: () => {\n      dispatch(fetchData())\n    },\n   \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nconst noteInitialState = false\nconst allReducer = (state = noteInitialState, action) => {\n  switch (action.type) {\n    case 'CHANGE_EDIT_STATUS':\n      // state =\n      return !state\n    default:\n      return state\n  }\n}\nexport default allReducer;","\nconst noteInitialState =  false;\nconst allReducer = (state = noteInitialState, action) => {\n  switch (action.type) {\n    case 'CHANGE_ADD_STATUS':\n      state = !state\n      return state\n    default:\n      return state\n  }\n}\nexport default allReducer;","\nconst noteInitialState = {}\nconst allReducer = (state = noteInitialState, action) => {\n  switch (action.type) {\n    case 'GET_DATA_EDIT':\n      return action.editObject\n    default:\n      return state\n  }\n}\nexport default allReducer;","const noteInitialState = []\nconst allReducer = (state = noteInitialState, action) => {\n  switch (action.type) {\n    case 'UPDATE_LIST':\n      return action.data\n    default:\n      return state\n  }\n}\nexport default allReducer;","import changeEditStatus  from './changeEditStatus';\nimport changeAddStatus  from './changeAddStatus';\nimport getDataEdit  from './getDataEdit';\nimport updateList  from './updateList';\nimport { combineReducers }  from 'redux';\n\nconst allReducer = combineReducers({\n  isAdd: changeAddStatus,\n  editStatus: changeEditStatus,\n  editData: getDataEdit,\n  data: updateList\n})\nexport default allReducer;","import allReducer from '../reducers/index';\nimport thunk from 'redux-thunk';\nimport {applyMiddleware} from 'redux'\nvar redux = require('redux');\n\nvar store = redux.createStore(allReducer,applyMiddleware(thunk));\nstore.subscribe(function(){\n  console.log(store.getState());\n})\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './components/store'\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n<Provider store={store}>\n  <App />\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}